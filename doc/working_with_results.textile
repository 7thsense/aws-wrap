---
layout: default
title: Working with Results
---

h2. Working with Results

h3. Scala Future

To avoid blocking the flow of your program while waiting to AWS to respond, a Scala "Future":http://www.scala-lang.org/api/milestone/index.html#scala.concurrent.Future is returned.

While it is possible to block the flow to retrieve the result, it is not recommended. Rather, you should pass the future to a function that can handle them in a non-blocking way.

For example, if you're in a Play Application, you can use an Async action:

bc. def delete(name: String) = Action {
    Async {
      SimpleDB.deleteDomain(name).map {
        case Result(_, _) => Ok("Successfully deleted")
        case AWSError(code, message) => Ok("Error deleting: " + message)
      }
    }
  }

h3. Results

A result may either be a success or an error. Although it is not recommended, you can do a .get() on the result to get its content, and it will throw an exception if the result was an error.

bc. def list() = Action {
    Async {
      SimpleDB.listDomains().map { result =>
        // Will throw if AWS returns an error
        Ok("Domain list: " + result.get)
      }
    }
  }


